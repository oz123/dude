set nocompatible               " be iMproved
filetype off                  " required!

if has("gui_running")
	set guioptions-=T 
	if has("gui_win32")
		set langmenu=en_US
		language messages en
	endif
endif

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

" My Bundles here:
"
" original repos on github
Bundle 'tpope/vim-fugitive'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
Bundle 'tpope/vim-rails.git'
" vim-scripts repos
Bundle 'L9'
Bundle 'FuzzyFinder'
" original repos on github
Bundle 'tpope/vim-fugitive'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
Bundle 'tpope/vim-rails.git'
" vim-scripts repos
Bundle 'L9'
Bundle 'FuzzyFinder'
" non github repos
Bundle 'git://git.wincent.com/command-t.git'
Bundle 'altercation/vim-colors-solarized'
" Autocompletion
Bundle 'AutoComplPop'
" Search results counter
"Bundle 'IndexedSearch'
" XML/HTML tags navigation
Bundle 'matchit.zip'
" Gvim colorscheme
Bundle 'Wombat'
" Yank history navigation
Bundle 'YankRing.vim'
" ...
" Better file browser
Bundle 'scrooloose/nerdtree'
" Code commenter
Bundle 'scrooloose/nerdcommenter'
" Class/module browser
Bundle 'majutsushi/tagbar'
" Code and files fuzzy finder
Bundle 'kien/ctrlp.vim'
" Zen coding
Bundle 'mattn/zencoding-vim'
" Git integration
Bundle 'motemen/git-vim'
" Tab list panel
Bundle 'kien/tabman.vim'
" Powerline
Bundle 'Lokaltog/vim-powerline'
" Terminal Vim with 256 colors colorscheme
Bundle 'fisadev/fisa-vim-colorscheme'
" Consoles as buffers
Bundle 'rosenfeld/conque-term'
" Pending tasks list
Bundle 'fisadev/FixedTaskList.vim'
" Surround
Bundle 'tpope/vim-surround'
" Autoclose
Bundle 'Townk/vim-autoclose'
" Indent text object
Bundle 'michaeljsmith/vim-indent-object'
" Python mode (indentation, doc, refactor, lints, code checking, motion and
" operators, highlighting, run and ipdb breakpoints)
Bundle 'klen/python-mode'
Bundle 'scrooloose/syntastic'
"Bundle 'ashwin/vim-powerline'
"Bundle 'millermedeiros/vim-statline'
Bundle 'stephenmckinney/vim-solarized-powerline'
Bundle 'nanotech/jellybeans.vim'

filetype plugin indent on     " required!
 
if has("gui_running")
   set guioptions-=T  "remove toolbar
   let g:Powerline_symbols = 'fancy'
   set background=light
   colorscheme solarized
   if has("gui_win32")
        set guifont=Consolas\ for\ Powerline\ FixedD:h11
   endif
   if has("gui_gtk2")
        let dsm=system('fc-list | grep -c Droid\ Sans\ Mono')
        let cons=system('fc-list | grep -c Inconsola')
        if ( dsm > 0)
           set gfn=Droid\ Sans\ Mono\ 10
        elseif ( cons > 0)
           set gfn=Inconsolata\ 12
        else 
           set gfn=Monospace\ 10
       endif
   endif
else
   "set background=dark
   colorscheme desert
   "let g:Powerline_colorscheme='solarized16_dark'
endif

filetype plugin indent on     " required!

syntax enable

set ls=2
set encoding=utf-8

"let g:syntastic_always_populate_loc_list=1
let g:syntastic_auto_loc_list=2
let g:syntastic_loc_list_height=4
let g:syntastic_python_checkers=['flake8']
"let g:syntastic_warning_symbol = 'ww'

" Maximum allowed mccabe complexity
let g:pymode_lint_mccabe_complexity = 8

set pastetoggle=<F2>

" toggle Tagbar display
map <F4> :TagbarToggle<CR>
" autofocus on Tagbar open
let g:tagbar_autofocus = 1
" NERDTree (better file browser) toggle
map <F3> :NERDTreeToggle<CR>

" save as sudo
ca w!! w !sudo tee "%"
" navigate windows with meta+arrows
map <M-Right> <c-w>l
map <M-Left> <c-w>h
map <M-Up> <c-w>k
map <M-Down> <c-w>j
imap <M-Right> <ESC><c-w>l
imap <M-Left> <ESC><c-w>h
imap <M-Up> <ESC><c-w>k
imap <M-Down> <ESC><c-w>j
filetype plugin on
filetype indent on
filetype on 
syntax on

" tabs and spaces handling
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4

" tablength exceptions
autocmd FileType html setlocal shiftwidth=2 tabstop=2
autocmd FileType htmldjango setlocal shiftwidth=2 tabstop=2
autocmd FileType javascript setlocal shiftwidth=2 tabstop=2

" always show status bar
set ls=2

" incremental search
set incsearch

" highlighted search results
set hlsearch

" line numbers
set nu

" toggle Tagbar display
map <F4> :TagbarToggle<CR>
" autofocus on Tagbar open
let g:tagbar_autofocus = 1
" NERDTree (better file browser) toggle
map <F3> :NERDTreeToggle<CR>

" replace tabs with spaces
set expandtab
set backspace=2
autocmd BufRead *.py set tabstop=4
autocmd BufRead * set nowrap
autocmd BufRead * set go+=b

"make nice spelling 
setlocal spell spelllang=en_us
highlight clear SpellBad
highlight SpellBad term=standout ctermfg=1 term=undercurl cterm=undercurl
highlight clear SpellCap
highlight SpellCap term=undercurl cterm=undercurl
highlight clear SpellRare
highlight SpellRare term=undercurl cterm=undercurl
highlight clear SpellLocal
highlight SpellLocal term=undercurl cterm=undercurl
set pastetoggle=<F2>

"make backspace behave properly
set bs=indent,eol,start      " allow backspacing over everything in insert mode 
" map backspace to delete 
set t_kb=

set tabstop=4 softtabstop=4 shiftwidth=4
" convert spaces to tabs when reading file
autocmd! bufreadpost *.py set noexpandtab | retab! 4
" convert tabs to spaces before writing file
autocmd! bufwritepre *.py set expandtab | retab! 4
